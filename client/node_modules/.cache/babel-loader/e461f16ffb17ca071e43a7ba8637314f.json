{"ast":null,"code":"var _jsxFileName = \"F:\\\\XAMPP\\\\htdocs\\\\ecom-just-react\\\\client\\\\src\\\\component\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport './cart-dropdown.styles.scss';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = _ref => {\n  let {\n    cartItems,\n    history,\n    dispatch\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: cartItem\n      }, cartItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty-message\",\n        children: \" Cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      onClick: () => {\n        history.push('/checkout');\n        dispatch(toggleCartHidden());\n      },\n      children: \" GO TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["F:/XAMPP/htdocs/ecom-just-react/client/src/component/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","CartItem","withRouter","connect","toggleCartHidden","selectCartItems","createStructuredSelector","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,6BAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAD;AAAA,sBACjB;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACMF,SAAS,CAACG,MAAV,GACIH,SAAS,CAACI,GAAV,CAAeC,QAAQ,iBACjB,QAAC,QAAD;AAA4B,QAAA,IAAI,EAAEA;AAAlC,SAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cADN,CADJ,gBAMF;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAK;AACxBL,QAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,QAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;AACC,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,CAArB;;KAAMG,Y;AAoBN,MAAMS,eAAe,GAAGV,wBAAwB,CAAC;AAC7CE,EAAAA,SAAS,EAAEH;AADkC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAAEC,OAAO,CAACa,eAAD,CAAP,CAAyBT,YAAzB,CAAF,CAAzB","sourcesContent":["import React from \"react\";\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport CartItem from \"../cart-item/cart-item.component\";\r\nimport './cart-dropdown.styles.scss';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\r\n\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nconst CartDropdown = ({cartItems, history, dispatch }) => (\r\n    <div className=\"cart-dropdown\">\r\n        <div className=\"cart-items\">\r\n            { cartItems.length ? \r\n                ( cartItems.map( cartItem => (\r\n                        <CartItem key={cartItem.id} item={cartItem}/>\r\n                    ))\r\n               )\r\n            :\r\n            <span className=\"empty-message\"> Cart is empty</span>\r\n            }\r\n        </div>\r\n        <CustomButton onClick={()=> {\r\n            history.push('/checkout')\r\n            dispatch(toggleCartHidden());\r\n            }}> GO TO CHECKOUT \r\n        </CustomButton> \r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n  });\r\n  \r\nexport default withRouter( connect(mapStateToProps)(CartDropdown) );"]},"metadata":{},"sourceType":"module"}