{"ast":null,"code":"// // import { initializeApp } from \"firebase/app\";\n// import firebase from 'firebase/compat/app';\n// import 'firebase/compat/firestore';\n// import 'firebase/compat/auth';\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDH7jfn9TY2_avm7drQKUS6zjCUAqq5A-0\",\n//   authDomain: \"ecom-just-react.firebaseapp.com\",\n//   projectId: \"ecom-just-react\",\n//   storageBucket: \"ecom-just-react.appspot.com\",\n//   messagingSenderId: \"533636479742\",\n//   appId: \"1:533636479742:web:cd902024f4c26021e603af\",\n//    // eslint-disable-next-line \n//   measurementId: \"${config.measurementId}\"\n// };\n// export const createUserProfileDocument = async( userAuth, additionalData) => {\n//     if(!userAuth) return;\n//     console.log(firebase.doc('users/123'));    \n// }\n// // Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\n// export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n// const provider = new firebase.auth.GoogleAuthProvider();\n// provider.setCustomParameters({ prompt: 'select_account' });\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\n// export default firebase;\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDH7jfn9TY2_avm7drQKUS6zjCUAqq5A-0\",\n  authDomain: \"ecom-just-react.firebaseapp.com\",\n  projectId: \"ecom-just-react\",\n  storageBucket: \"ecom-just-react.appspot.com\",\n  messagingSenderId: \"533636479742\",\n  appId: \"1:533636479742:web:cd902024f4c26021e603af\",\n  // eslint-disable-next-line \n  measurementId: \"${config.measurementId}\"\n};\nconst firebase = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nconst db = getFirestore(firebase);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  console.log(getDocs('users/123'));\n};\nconst provider = new GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  signInWithPopup(auth, provider).then(result => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken; // The signed-in user info.\n\n    const user = result.user; // ...\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The AuthCredential type that was used.\n\n    const credential = GoogleAuthProvider.credentialFromError(error); // ...\n  });\n};\nexport default firebase;","map":{"version":3,"sources":["F:/XAMPP/htdocs/ecom-just-react/src/firebase/firebase.utils.js"],"names":["initializeApp","getFirestore","collection","getDocs","getAuth","signInWithPopup","GoogleAuthProvider","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","auth","db","createUserProfileDocument","userAuth","additionalData","console","log","provider","signInWithGoogle","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","credentialFromError"],"mappings":"AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAIA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,OAAnC,QAAkD,yBAAlD;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,QAA6D,eAA7D;AAGA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,iCAFO;AAGnBC,EAAAA,SAAS,EAAE,iBAHQ;AAInBC,EAAAA,aAAa,EAAE,6BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOlB;AACDC,EAAAA,aAAa,EAAE;AARI,CAAvB;AAWE,MAAMC,QAAQ,GAAGf,aAAa,CAACO,cAAD,CAA9B;AACA,OAAO,MAAMS,IAAI,GAAGZ,OAAO,EAApB;AAEP,MAAMa,EAAE,GAAGhB,YAAY,CAACc,QAAD,CAAvB;AAEA,OAAO,MAAMG,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AAEdE,EAAAA,OAAO,CAACC,GAAR,CAAYnB,OAAO,CAAC,WAAD,CAAnB;AACH,CAJQ;AAOT,MAAMoB,QAAQ,GAAG,IAAIjB,kBAAJ,EAAjB;AAEA,OAAO,MAAMkB,gBAAgB,GAAG,MAAM;AAClCnB,EAAAA,eAAe,CAACW,IAAD,EAAOO,QAAP,CAAf,CACCE,IADD,CACOC,MAAD,IAAY;AACd;AACA,UAAMC,UAAU,GAAGrB,kBAAkB,CAACsB,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,UAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAHc,CAId;;AACA,UAAMC,IAAI,GAAGL,MAAM,CAACK,IAApB,CALc,CAMd;AACH,GARD,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChB;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHgB,CAIhB;;AACA,UAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB,CALgB,CAMhB;;AACA,UAAMX,UAAU,GAAGrB,kBAAkB,CAACiC,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPgB,CAQhB;AACH,GAjBD;AAkBH,CAnBM;AAqBP,eAAelB,QAAf","sourcesContent":["\r\n// // import { initializeApp } from \"firebase/app\";\r\n// import firebase from 'firebase/compat/app';\r\n// import 'firebase/compat/firestore';\r\n// import 'firebase/compat/auth';\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyDH7jfn9TY2_avm7drQKUS6zjCUAqq5A-0\",\r\n//   authDomain: \"ecom-just-react.firebaseapp.com\",\r\n//   projectId: \"ecom-just-react\",\r\n//   storageBucket: \"ecom-just-react.appspot.com\",\r\n//   messagingSenderId: \"533636479742\",\r\n//   appId: \"1:533636479742:web:cd902024f4c26021e603af\",\r\n//    // eslint-disable-next-line \r\n//   measurementId: \"${config.measurementId}\"\r\n// };\r\n\r\n// export const createUserProfileDocument = async( userAuth, additionalData) => {\r\n//     if(!userAuth) return;\r\n\r\n//     console.log(firebase.doc('users/123'));    \r\n// }\r\n\r\n// // Initialize Firebase\r\n// firebase.initializeApp(firebaseConfig);\r\n\r\n// export const auth = firebase.auth();\r\n// export const firestore = firebase.firestore();\r\n\r\n// const provider = new firebase.auth.GoogleAuthProvider();\r\n// provider.setCustomParameters({ prompt: 'select_account' });\r\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n// export default firebase;\r\n\r\n\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDH7jfn9TY2_avm7drQKUS6zjCUAqq5A-0\",\r\n    authDomain: \"ecom-just-react.firebaseapp.com\",\r\n    projectId: \"ecom-just-react\",\r\n    storageBucket: \"ecom-just-react.appspot.com\",\r\n    messagingSenderId: \"533636479742\",\r\n    appId: \"1:533636479742:web:cd902024f4c26021e603af\",\r\n     // eslint-disable-next-line \r\n    measurementId: \"${config.measurementId}\"\r\n  };\r\n\r\n  const firebase = initializeApp(firebaseConfig);\r\n  export const auth = getAuth();\r\n\r\n  const db = getFirestore(firebase);\r\n\r\n  export const createUserProfileDocument = async( userAuth, additionalData) => {\r\n    if(!userAuth) return;\r\n\r\n    console.log(getDocs('users/123'));    \r\n}\r\n\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => {\r\n    signInWithPopup(auth, provider)\r\n    .then((result) => {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n        // The signed-in user info.\r\n        const user = result.user;\r\n        // ...\r\n    }).catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.email;\r\n        // The AuthCredential type that was used.\r\n        const credential = GoogleAuthProvider.credentialFromError(error);\r\n        // ...\r\n    });\r\n};\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}