{"ast":null,"code":"var _jsxFileName = \"F:\\\\XAMPP\\\\htdocs\\\\ecom-just-react\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../component/with-spinner/with-spinner.component\";\nimport CollectionOverview from \"../../component/collection-overview/collection-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      const {\n        updateCollections\n      } = this.props;\n      const collectionRef = firestore.collection('collections');\n      collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        this.setState({\n          loading: false\n        });\n      });\n    }, 1500);\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverview,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["F:/XAMPP/htdocs/ecom-just-react/src/pages/shop/shop.component.jsx"],"names":["render","React","Route","connect","updateCollections","WithSpinner","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","constructor","unsubscribeFromSnapshot","state","loading","componentDidMount","setTimeout","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,qDAAxB;AAEA,OAAOC,kBAAP,MAA+B,mEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,MAAMC,6BAA6B,GAAGL,WAAW,CAACC,kBAAD,CAAjD;KAAMI,6B;AACN,MAAMC,yBAAyB,GAAGN,WAAW,CAACE,cAAD,CAA7C;MAAMI,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,GAAI;AACX;AADW,SAQfC,uBARe,GAQW,IARX;AAGX,SAAKC,KAAL,GAAY;AACRC,MAAAA,OAAO,EAAE;AADD,KAAZ;AAGH;;AAIDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,UAAU,CAAC,MAAI;AACX,YAAM;AAAEf,QAAAA;AAAF,UAAwB,KAAKgB,KAAnC;AAEA,YAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,MAAAA,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AACxC,cAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACApB,QAAAA,iBAAiB,CAACqB,cAAD,CAAjB;AAEA,aAAKC,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAE;AAAX,SAAd;AACH,OALD;AAOH,KAZS,EAYR,IAZQ,CAAV;AAcH;;AAGDjB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAE2B,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKG,KAAzB;AAEA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEtB,kBAA/C;AACQ,QAAA,MAAM,EAAGc,KAAD,iBAAW,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEH,OAA1C;AAAA,aAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AAD3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAErB,cAAvD;AACQ,QAAA,MAAM,EAAEa,KAAK,iBAAI,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AADzB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAQH;;AA1CkC;;AA2CtC;;AAED,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACpC1B,EAAAA,iBAAiB,EAAEqB,cAAc,IAC7BK,QAAQ,CAAE1B,iBAAiB,CAACqB,cAAD,CAAnB;AAFwB,CAAL,CAAnC;;AAKA,eAAetB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\n\r\nimport WithSpinner from \"../../component/with-spinner/with-spinner.component\";\r\n\r\nimport CollectionOverview from \"../../component/collection-overview/collection-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n    constructor () {\r\n        super();\r\n\r\n        this.state ={\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        setTimeout(()=>{\r\n            const { updateCollections } = this.props;\r\n\r\n            const collectionRef = firestore.collection('collections');\r\n            \r\n            collectionRef.onSnapshot( async snapshot => {\r\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n                updateCollections(collectionsMap)\r\n    \r\n                this.setState({ loading: false });\r\n            });\r\n    \r\n        },1500)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const { loading } = this.props;\r\n        \r\n        return(\r\n        <div className='shop-page'>\r\n            <Route exact path={`${match.path}`} component={CollectionOverview} \r\n                    render={(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props}/> }/>\r\n            <Route path={`${match.path}/:collectionId`} component={CollectionPage}\r\n                    render={props => <CollectionPageWithSpinner isLoading={loading} {...props} /> }  />\r\n        </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => \r\n        dispatch( updateCollections(collectionsMap) )\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}