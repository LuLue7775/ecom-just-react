{"ast":null,"code":"var _jsxFileName = \"F:\\\\XAMPP\\\\htdocs\\\\ecom-just-react\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './component/header/header.component.jsx';\nimport SignInAndSignUpPage from './pages/signin-and-signup/signin-and-signup.component';\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.action';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { selectCollectionsForPreview } from './redux/shop/shop.selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser,\n      collectionsArray\n    } = this.props; // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth  => {\n    //   if (userAuth) {\n    //       const userRef = await createUserProfileDocument(userAuth);\n    //       userRef.onSnapshot(snapShot => {\n    //         setCurrentUser({\n    //             id: snapShot.id,\n    //             ...snapShot.data()\n    //         });\n    //       });\n    //   }\n    //   setCurrentUser( userAuth ); \n    //   // addCollectionAndDocuments( 'collections', collectionsArray.map( ({title, items}) => ({title, items}) )  ); //.map is for just getting the title and items property instead of everything. \n    // });\n  }\n\n  componentWillUnmount() {\n    //According to the documentation, the onAuthStateChanged() function returns the unsubscribe function for the observer. So you can just:\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: ShopPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 76\n          }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUpPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 102\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/checkout\",\n          component: CheckoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  collectionsArray: selectCollectionsForPreview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["F:/XAMPP/htdocs/ecom-just-react/src/App.js"],"names":["React","HomePage","ShopPage","CheckoutPage","Route","Switch","Redirect","Header","SignInAndSignUpPage","auth","createUserProfileDocument","addCollectionAndDocuments","connect","setCurrentUser","createStructuredSelector","selectCurrentUser","selectCollectionsForPreview","App","Component","unsubscribeFromAuth","componentDidMount","collectionsArray","props","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AAGA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,mBAAP,MAAgC,uDAAhC;AACA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,yBAA1C,QAA2E,2BAA3E;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,SAASC,2BAAT,QAA4C,4BAA5C;;;AACA,MAAMC,GAAN,SAAkBjB,KAAK,CAACkB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,mBAFgC,GAEV,IAFU;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACP,MAAAA,cAAD;AAAiBQ,MAAAA;AAAjB,QAAqC,KAAKC,KAAhD,CADkB,CAGlB;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKJ,mBAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEvB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,MAAM,EAAE,MAAM,KAAKoB,KAAL,CAAWG,WAAX,gBAA2B,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAA3B,gBAAqD,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAzF;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAEtB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA1C+B;;AA6ClC,MAAMuB,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CW,EAAAA,WAAW,EAAEV,iBADkC;AAE/CM,EAAAA,gBAAgB,EAAEL;AAF6B,CAAD,CAAhD;;AAKA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,cAAc,EAAEgB,IAAI,IAAID,QAAQ,CAACf,cAAc,CAACgB,IAAD,CAAf;AADM,CAAL,CAAnC;;AAIA,eAAejB,OAAO,CACpBc,eADoB,EAEpBC,kBAFoB,CAAP,CAGbV,GAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport HomePage from './pages/homepage/homepage.component';\r\nimport ShopPage from './pages/shop/shop.component';\r\nimport CheckoutPage from './pages/checkout/checkout.component';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n\r\nimport Header from './component/header/header.component.jsx';\r\nimport SignInAndSignUpPage from './pages/signin-and-signup/signin-and-signup.component';\r\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from './firebase/firebase.utils';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentUser } from './redux/user/user.action';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCurrentUser } from './redux/user/user.selectors';\r\n\r\nimport { selectCollectionsForPreview } from './redux/shop/shop.selector';\r\nclass App extends React.Component {\r\n\r\n  unsubscribeFromAuth = null;\r\n  \r\n  componentDidMount() {\r\n    const {setCurrentUser, collectionsArray} = this.props;\r\n\r\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth  => {\r\n\r\n    //   if (userAuth) {\r\n    //       const userRef = await createUserProfileDocument(userAuth);\r\n\r\n    //       userRef.onSnapshot(snapShot => {\r\n    //         setCurrentUser({\r\n    //             id: snapShot.id,\r\n    //             ...snapShot.data()\r\n    //         });\r\n    //       });\r\n    //   }\r\n      \r\n    //   setCurrentUser( userAuth ); \r\n    //   // addCollectionAndDocuments( 'collections', collectionsArray.map( ({title, items}) => ({title, items}) )  ); //.map is for just getting the title and items property instead of everything. \r\n    // });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //According to the documentation, the onAuthStateChanged() function returns the unsubscribe function for the observer. So you can just:\r\n    this.unsubscribeFromAuth(); \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path='/' component={HomePage} />\r\n            <Route path='/shop' component={ShopPage}/>\r\n            <Route path='/signin' render={() => this.props.currentUser ? ( <Redirect to='/' /> ) : ( <SignInAndSignUpPage/> )}/>\r\n            <Route path='/checkout' component={CheckoutPage} />\r\n          </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser,\r\n  collectionsArray: selectCollectionsForPreview\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentUser: user => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);"]},"metadata":{},"sourceType":"module"}