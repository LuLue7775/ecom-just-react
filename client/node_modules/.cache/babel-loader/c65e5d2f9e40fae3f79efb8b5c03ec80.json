{"ast":null,"code":"var _jsxFileName = \"F:\\\\XAMPP\\\\htdocs\\\\ecom-just-react\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../component/with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"../../component/collection-overview/collection-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["F:/XAMPP/htdocs/ecom-just-react/src/pages/shop/shop.component.jsx"],"names":["render","React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","match","isCollectionFetching","path","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAOC,WAAP,MAAwB,qDAAxB;AAEA,OAAOC,mBAAP,MAAgC,mEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;KAAME,8B;AACN,MAAMC,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;MAAME,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AACAV,IAAAA,0BAA0B;AAE7B;;AAGDL,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEgB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKF,KAA7C;AAEA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEC,KAAK,CAACE,IAAK,EAAjC;AACI,QAAA,MAAM,EAAEH,KAAK,iBACT,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEE,oBAA3C;AAAA,aAAqEF;AAArE;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEC,KAAK,CAACE,IAAK,gBAA3B;AACI,QAAA,MAAM,EAAEH,KAAK,iBACT,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEE,oBAAtC;AAAA,aAAgEF;AAAhE;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAcH;;AA1BkC;;AA2BtC;;AAED,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,MAAMgB,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Ca,EAAAA,oBAAoB,EAAEX;AADuB,CAAD,CAAhD;AAIA,eAAeH,OAAO,CAACkB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CP,QAA7C,CAAf","sourcesContent":["import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selector\";\r\n\r\nimport WithSpinner from \"../../component/with-spinner/with-spinner.component\";\r\n\r\nimport CollectionsOverview from \"../../component/collection-overview/collection-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync();\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { match, isCollectionFetching } = this.props;\r\n        \r\n        return(\r\n        <div className='shop-page'>\r\n            <Route exact path={`${match.path}`} \r\n                render={props => (\r\n                    <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\r\n                )}\r\n                />\r\n            <Route path={`${match.path}/:collectionId`} \r\n                render={props => (\r\n                    <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />\r\n                )}\r\n                />\r\n        </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}